function Math.init 1
push constant 0
pop local 0
push constant 1
pop static 0
push constant 16
call Array.new 1
pop static 1
label while-0-1
push local 0
push constant 16
lt
not
if-goto while-0-2
push local 0
push static 1
add
push static 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push static 0
add
pop static 0
push local 0
push constant 1
add
pop local 0
goto while-0-1
label while-0-2
push constant 0
return
function Math.multiply 2
push constant 0
pop local 0
push constant 0
pop local 1
label while-1-1
push local 0
push constant 16
lt
not
if-goto while-1-2
push argument 0
push static 1
push local 0
add
pop pointer 1
push that 0
and
push constant 0
gt
not
if-goto if-0-1
push local 1
push argument 1
add
pop local 1
label if-0-1
push argument 1
push argument 1
add
pop argument 1
push local 0
push constant 1
add
pop local 0
goto while-1-1
label while-1-2
push local 1
return
function Math.divide 3
push constant 1
pop local 1
push argument 0
push constant 0
lt
not
if-goto if-1-1
push constant 1
neg
pop local 1
push argument 0
neg
pop argument 0
label if-1-1
push argument 1
push constant 0
lt
not
if-goto if-2-1
push local 1
neg
pop local 1
push argument 1
neg
pop argument 1
label if-2-1
push argument 1
push constant 0
eq
not
if-goto if-3-1
push constant 0
return
label if-3-1
push argument 1
push argument 0
gt
not
if-goto if-4-1
push constant 0
return
label if-4-1
push argument 0
push constant 2
push argument 1
call Math.multiply 2
call Math.divide 2
pop local 0
push constant 2
push local 0
call Math.multiply 2
pop local 2
push argument 0
push local 2
push argument 1
call Math.multiply 2
sub
push argument 1
lt
not
if-goto if-5-1
push local 1
push local 2
call Math.multiply 2
return
label if-5-1
push local 1
push local 2
call Math.multiply 2
push constant 1
add
return
function Math.sqrt 3
push argument 0
push constant 2
lt
not
if-goto if-6-1
push argument 0
return
label if-6-1
push constant 0
pop local 0
push constant 7
pop local 1
label while-2-1
push local 1
push constant 0
lt
not
not
if-goto while-2-2
push local 0
push static 1
push local 1
add
pop pointer 1
push that 0
add
pop local 2
push local 2
push local 2
call Math.multiply 2
push argument 0
gt
not
push local 2
push constant 182
lt
and
not
if-goto if-7-1
push local 2
pop local 0
label if-7-1
push local 1
push constant 1
sub
pop local 1
goto while-2-1
label while-2-2
push local 0
return
function Math.max 0
push argument 0
push argument 1
gt
not
if-goto if-8-1
push argument 0
return
label if-8-1
push argument 1
return
function Math.min 0
push argument 0
push argument 1
lt
not
if-goto if-9-1
push argument 0
return
label if-9-1
push argument 1
return
function Math.abs 0
push argument 0
push constant 0
lt
not
if-goto if-10-1
push argument 0
neg
return
label if-10-1
push argument 0
return
