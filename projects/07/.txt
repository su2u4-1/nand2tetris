# two arg command
tac0 = {
    "push": f"@{t0[text[i][1]]}\nD=M\n@{text[i][2]}\nA=D+A\nD=M\n@SP\nM=M+1\nA=M-1\nM=D",
    "pop": f"@{t0[text[i][1]]}\nD=M\n@{text[i][2]}\nD=D+A\n@R13\nM=D\n@SP\nM=M-1\nA=M\nD=M\n@R13\nA=M\nM=D",
}
tac1 = {"push": f"@{t1[text[i][1]]}\nD=M\n@SP\nM=M+1\nA=M-1\nM=D", "pop": f"@SP\nM=M-1\nA=M\nD=M\n@{t1[text[i][1]]}\nM=D"}
t0 = {"argument": "ARG", "local": "LCL", "this": "THIS", "that": "THAt"}
t1 = {"static": f"{name}.{text[i][2]}", "pointer": f"{t2[text[i][2]]}", "temp": f"R{5+int(text[i][2])}"}
t2 = {"0": "THIS", "1": "THAT"}

if text[i][0] == "add":
    command.append("@SP\nA=M-1\nD=M\nA=A-1\nD=D+M\n@SP\nM=M-1\nA=M-1\nM=D")
elif text[i][0] == "sub":
    command.append("@SP\nA=M-1\nD=M\nA=A-1\nD=M-D\n@SP\nM=M-1\nA=M-1\nM=D")
elif text[i][0] == "neg":
    command.append("@SP\nA=M-1\nD=M\nD=D-M\nM=D-M")
elif text[i][0] == "eq":
    command.append(f"@SP\nA=M-1\nD=M\nA=A-1\nD=D-M\n@TRUE{n}\nD;JEQ\n@SP\nM=M-1\nA=M-1\nM=0\n@END{n}\n0;JMP\n(TRUE{n})\n@SP\nM=M-1\nA=M-1\nM=-1\n(END{n})")
elif text[i][0] == "gt":
    command.append(f"@SP\nA=M-1\nD=M\nA=A-1\nD=D-M\n@TRUE{n}\nD;JLT\n@SP\nM=M-1\nA=M-1\nM=0\n@END{n}\n0;JMP\n(TRUE{n})\n@SP\nM=M-1\nA=M-1\nM=-1\n(END{n})")
elif text[i][0] == "lt":
    command.append(f"@SP\nA=M-1\nD=M\nA=A-1\nD=D-M\n@TRUE{n}\nD;JGT\n@SP\nM=M-1\nA=M-1\nM=0\n@END{n}\n0;JMP\n(TRUE{n})\n@SP\nM=M-1\nA=M-1\nM=-1\n(END{n})")
elif text[i][0] == "and":
    command.append("@SP\nA=M-1\nD=M\nA=A-1\nD=D&M\n@SP\nM=M-1\nA=M-1\nM=D")
elif text[i][0] == "or":
    command.append("@SP\nA=M-1\nD=M\nA=A-1\nD=D|M\n@SP\nM=M-1\nA=M-1\nM=D")
elif text[i][0] == "not":
    command.append("@SP\nA=M-1\nM=!M")
elif text[i][0] == "push":
    if text[i][1] == "argument":
        command.append(f"@ARG\nD=M\n@{text[i][2]}\nA=D+A\nD=M\n@SP\nM=M+1\nA=M-1\nM=D")
    elif text[i][1] == "local":
        command.append(f"@LCL\nD=M\n@{text[i][2]}\nA=D+A\nD=M\n@SP\nM=M+1\nA=M-1\nM=D")
    elif text[i][1] == "this":
        command.append(f"@THIS\nD=M\n@{text[i][2]}\nA=D+A\nD=M\n@SP\nM=M+1\nA=M-1\nM=D")
    elif text[i][1] == "that":
        command.append(f"@THAt\nD=M\n@{text[i][2]}\nA=D+A\nD=M\n@SP\nM=M+1\nA=M-1\nM=D")
    elif text[i][1] == "static":
        command.append(f"@{name}.{text[i][2]}\nD=M\n@SP\nM=M+1\nA=M-1\nM=D")
    elif text[i][1] == "pointer":
        if text[i][2] == "0":
            command.append(f"@THIS\nD=M\n@SP\nM=M+1\nA=M-1\nM=D")
        elif text[i][2] == "1":
            command.append(f"@THAT\nD=M\n@SP\nM=M+1\nA=M-1\nM=D")
    elif text[i][1] == "temp":
        command.append(f"@R{5+int(text[i][2])}\nD=M\n@SP\nM=M+1\nA=M-1\nM=D")
    elif text[i][1] == "constant":
        command.append(f"@{text[i][2]}\nD=A\n@SP\nM=M+1\nA=M-1\nM=D")
elif text[i][0] == "pop":
    if text[i][1] == "argument":
        command.append(f"@ARG\nD=M\n@{text[i][2]}\nD=D+A\n@R13\nM=D\n@SP\nM=M-1\nA=M\nD=M\n@R13\nA=M\nM=D")
    elif text[i][1] == "local":
        command.append(f"@LCL\nD=M\n@{text[i][2]}\nD=D+A\n@R13\nM=D\n@SP\nM=M-1\nA=M\nD=M\n@R13\nA=M\nM=D")
    elif text[i][1] == "this":
        command.append(f"@THIS\nD=M\n@{text[i][2]}\nD=D+A\n@R13\nM=D\n@SP\nM=M-1\nA=M\nD=M\n@R13\nA=M\nM=D")
    elif text[i][1] == "that":
        command.append(f"@THAt\nD=M\n@{text[i][2]}\nD=D+A\n@R13\nM=D\n@SP\nM=M-1\nA=M\nD=M\n@R13\nA=M\nM=D")
    elif text[i][1] == "static":
        command.append(f"@SP\nM=M-1\nA=M\nD=M\n@{name}.{text[i][2]}\nM=D")
    elif text[i][1] == "pointer":
        if text[i][2] == "0":
            command.append(f"@SP\nM=M-1\nA=M\nD=M\n@THIS\nM=D")
        elif text[i][2] == "1":
            command.append(f"@SP\nM=M-1\nA=M\nD=M\n@THAT\nM=D")
    elif text[i][1] == "temp":
        command.append(f"@SP\nM=M-1\nA=M\nD=M\n@R{5+int(text[i][2])}\nM=D")
elif text[i][0] == "label":
    command.append(f"({name}${text[i][1]})")
elif text[i][0] == "goto":
    command.append(f"@{name}${text[i][1]}\n0;JMP")
elif text[i][0] == "if-goto":
    command.append(f"@SP\nM=M-1\nA=M\nD=M\n@{name}${text[i][1]}\nD;JNE")