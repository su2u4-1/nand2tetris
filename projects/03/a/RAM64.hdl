// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
        DMux8Way(in=load,sel=address[3..5],a=load0,b=load1,c=load2,d=load3,e=load4,f=load5,g=load6,h=load7);
        DMux8Way(in=load0,sel=address[0..2],a=load00,b=load01,c=load02,d=load03,e=load04,f=load05,g=load06,h=load07)
        DMux8Way(in=load1,sel=address[0..2],a=load10,b=load11,c=load12,d=load13,e=load14,f=load15,g=load16,h=load17)
        DMux8Way(in=load2,sel=address[0..2],a=load20,b=load21,c=load22,d=load23,e=load24,f=load25,g=load26,h=load27)
        DMux8Way(in=load3,sel=address[0..2],a=load30,b=load31,c=load32,d=load33,e=load34,f=load35,g=load36,h=load37)
        DMux8Way(in=load4,sel=address[0..2],a=load40,b=load41,c=load42,d=load43,e=load44,f=load45,g=load46,h=load47)
        DMux8Way(in=load5,sel=address[0..2],a=load50,b=load51,c=load52,d=load53,e=load54,f=load55,g=load56,h=load57)
        DMux8Way(in=load6,sel=address[0..2],a=load60,b=load61,c=load62,d=load63,e=load64,f=load65,g=load66,h=load67)
        DMux8Way(in=load7,sel=address[0..2],a=load70,b=load71,c=load72,d=load73,e=load74,f=load75,g=load76,h=load77)
        Register(in=in,load=load00,out=o00);
        Register(in=in,load=load01,out=o01);
        Register(in=in,load=load02,out=o02);
        Register(in=in,load=load03,out=o03);
        Register(in=in,load=load04,out=o04);
        Register(in=in,load=load05,out=o05);
        Register(in=in,load=load06,out=o06);
        Register(in=in,load=load07,out=o07);
        Register(in=in,load=load10,out=o10);
        Register(in=in,load=load11,out=o11);
        Register(in=in,load=load12,out=o12);
        Register(in=in,load=load13,out=o13);
        Register(in=in,load=load14,out=o14);
        Register(in=in,load=load15,out=o15);
        Register(in=in,load=load16,out=o16);
        Register(in=in,load=load17,out=o17);
        Register(in=in,load=load20,out=o20);
        Register(in=in,load=load21,out=o21);
        Register(in=in,load=load22,out=o22);
        Register(in=in,load=load23,out=o23);
        Register(in=in,load=load24,out=o24);
        Register(in=in,load=load25,out=o25);
        Register(in=in,load=load26,out=o26);
        Register(in=in,load=load27,out=o27);
        Register(in=in,load=load30,out=o30);
        Register(in=in,load=load31,out=o31);
        Register(in=in,load=load32,out=o32);
        Register(in=in,load=load33,out=o33);
        Register(in=in,load=load34,out=o34);
        Register(in=in,load=load35,out=o35);
        Register(in=in,load=load36,out=o36);
        Register(in=in,load=load37,out=o37);
        Register(in=in,load=load40,out=o40);
        Register(in=in,load=load41,out=o41);
        Register(in=in,load=load42,out=o42);
        Register(in=in,load=load43,out=o43);
        Register(in=in,load=load44,out=o44);
        Register(in=in,load=load45,out=o45);
        Register(in=in,load=load46,out=o46);
        Register(in=in,load=load47,out=o47);
        Register(in=in,load=load50,out=o50);
        Register(in=in,load=load51,out=o51);
        Register(in=in,load=load52,out=o52);
        Register(in=in,load=load53,out=o53);
        Register(in=in,load=load54,out=o54);
        Register(in=in,load=load55,out=o55);
        Register(in=in,load=load56,out=o56);
        Register(in=in,load=load57,out=o57);
        Register(in=in,load=load60,out=o60);
        Register(in=in,load=load61,out=o61);
        Register(in=in,load=load62,out=o62);
        Register(in=in,load=load63,out=o63);
        Register(in=in,load=load64,out=o64);
        Register(in=in,load=load65,out=o65);
        Register(in=in,load=load66,out=o66);
        Register(in=in,load=load67,out=o67);
        Register(in=in,load=load70,out=o70);
        Register(in=in,load=load71,out=o71);
        Register(in=in,load=load72,out=o72);
        Register(in=in,load=load73,out=o73);
        Register(in=in,load=load74,out=o74);
        Register(in=in,load=load75,out=o75);
        Register(in=in,load=load76,out=o76);
        Register(in=in,load=load77,out=o77);
        Mux8Way16(a=o00,b=o01,c=o02,d=o03,e=o04,f=o05,g=o06,h=o07,sel=address[0..2],out=o0);
        Mux8Way16(a=o10,b=o11,c=o12,d=o13,e=o14,f=o15,g=o16,h=o17,sel=address[0..2],out=o1);
        Mux8Way16(a=o20,b=o21,c=o22,d=o23,e=o24,f=o25,g=o26,h=o27,sel=address[0..2],out=o2);
        Mux8Way16(a=o30,b=o31,c=o32,d=o33,e=o34,f=o35,g=o36,h=o37,sel=address[0..2],out=o3);
        Mux8Way16(a=o40,b=o41,c=o42,d=o43,e=o44,f=o45,g=o46,h=o47,sel=address[0..2],out=o4);
        Mux8Way16(a=o50,b=o51,c=o52,d=o53,e=o54,f=o55,g=o56,h=o57,sel=address[0..2],out=o5);
        Mux8Way16(a=o60,b=o61,c=o62,d=o63,e=o64,f=o65,g=o66,h=o67,sel=address[0..2],out=o6);
        Mux8Way16(a=o70,b=o71,c=o72,d=o73,e=o74,f=o75,g=o76,h=o77,sel=address[0..2],out=o7);
        Mux8Way16(a=o0,b=o1,c=o2,d=o3,e=o4,f=o5,g=o6,h=o7,sel=address[3..5],out=out);
}