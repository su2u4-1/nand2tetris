// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl
/**
 * 16位元暫存器:
 * 如果load有效，則暫存器的值設定為in;
 * 否則，暫存器保持其當前值:
 * if (load(t)) out(t+1) = int(t), else out(t+1) = out(t)
 */
CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
        Nand(a=load,b=load,out=Notload);
        Nand(a=load,b=in[0],out=in00);
        Nand(a=Notload,b=re0,out=in10);
        Nand(a=in00,b=in10,out=in20);
        DFF(in=in20,out=out[0],out=re0);
        Nand(a=load,b=in[1],out=in01);
        Nand(a=Notload,b=re1,out=in11);
        Nand(a=in01,b=in11,out=in21);
        DFF(in=in21,out=out[1],out=re1);
        Nand(a=load,b=in[2],out=in02);
        Nand(a=Notload,b=re2,out=in12);
        Nand(a=in02,b=in12,out=in22);
        DFF(in=in22,out=out[2],out=re2);
        Nand(a=load,b=in[3],out=in03);
        Nand(a=Notload,b=re3,out=in13);
        Nand(a=in03,b=in13,out=in23);
        DFF(in=in23,out=out[3],out=re3);
        Nand(a=load,b=in[4],out=in04);
        Nand(a=Notload,b=re4,out=in14);
        Nand(a=in04,b=in14,out=in24);
        DFF(in=in24,out=out[4],out=re4);
        Nand(a=load,b=in[5],out=in05);
        Nand(a=Notload,b=re5,out=in15);
        Nand(a=in05,b=in15,out=in25);
        DFF(in=in25,out=out[5],out=re5);
        Nand(a=load,b=in[6],out=in06);
        Nand(a=Notload,b=re6,out=in16);
        Nand(a=in06,b=in16,out=in26);
        DFF(in=in26,out=out[6],out=re6);
        Nand(a=load,b=in[7],out=in07);
        Nand(a=Notload,b=re7,out=in17);
        Nand(a=in07,b=in17,out=in27);
        DFF(in=in27,out=out[7],out=re7);
        Nand(a=load,b=in[8],out=in08);
        Nand(a=Notload,b=re8,out=in18);
        Nand(a=in08,b=in18,out=in28);
        DFF(in=in28,out=out[8],out=re8);
        Nand(a=load,b=in[9],out=in09);
        Nand(a=Notload,b=re9,out=in19);
        Nand(a=in09,b=in19,out=in29);
        DFF(in=in29,out=out[9],out=re9);
        Nand(a=load,b=in[10],out=in010);
        Nand(a=Notload,b=re10,out=in110);
        Nand(a=in010,b=in110,out=in210);
        DFF(in=in210,out=out[10],out=re10);
        Nand(a=load,b=in[11],out=in011);
        Nand(a=Notload,b=re11,out=in111);
        Nand(a=in011,b=in111,out=in211);
        DFF(in=in211,out=out[11],out=re11);
        Nand(a=load,b=in[12],out=in012);
        Nand(a=Notload,b=re12,out=in112);
        Nand(a=in012,b=in112,out=in212);
        DFF(in=in212,out=out[12],out=re12);
        Nand(a=load,b=in[13],out=in013);
        Nand(a=Notload,b=re13,out=in113);
        Nand(a=in013,b=in113,out=in213);
        DFF(in=in213,out=out[13],out=re13);
        Nand(a=load,b=in[14],out=in014);
        Nand(a=Notload,b=re14,out=in114);
        Nand(a=in014,b=in114,out=in214);
        DFF(in=in214,out=out[14],out=re14);
        Nand(a=load,b=in[15],out=in015);
        Nand(a=Notload,b=re15,out=in115);
        Nand(a=in015,b=in115,out=in215);
        DFF(in=in215,out=out[15],out=re15);
}