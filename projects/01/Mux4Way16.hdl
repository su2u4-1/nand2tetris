// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl
/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */
CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
        Nand(a=sel[0],b=sel[0],out=ns0);
        Nand(a=sel[1],b=sel[1],out=ns1);
        Nand(a=ns0,b=ns1,out=n0);
        Nand(a=sel[0],b=ns1,out=n1);
        Nand(a=ns0,b=sel[1],out=n2);
        Nand(a=sel[0],b=sel[1],out=n3);
        Nand(a=n0,b=n0,out=i0);
        Nand(a=n1,b=n1,out=i1);
        Nand(a=n2,b=n2,out=i2);
        Nand(a=n3,b=n3,out=i3);

        Nand(a=a[0],b=i0,out=ia0);
        Nand(a=b[0],b=i1,out=ib0);
        Nand(a=c[0],b=i2,out=ic0);
        Nand(a=d[0],b=i3,out=id0);
        Nand(a=ia0,b=ib0,out=ab0);
        Nand(a=ic0,b=id0,out=cd0);
        Nand(a=ab0,b=ab0,out=z00);
        Nand(a=cd0,b=cd0,out=z10);
        Nand(a=z00,b=z10,out=out[0]);

        Nand(a=a[1],b=i0,out=ia1);
        Nand(a=b[1],b=i1,out=ib1);
        Nand(a=c[1],b=i2,out=ic1);
        Nand(a=d[1],b=i3,out=id1);
        Nand(a=ia1,b=ib1,out=ab1);
        Nand(a=ic1,b=id1,out=cd1);
        Nand(a=ab1,b=ab1,out=z01);
        Nand(a=cd1,b=cd1,out=z11);
        Nand(a=z01,b=z11,out=out[1]);

        Nand(a=a[2],b=i0,out=ia2);
        Nand(a=b[2],b=i1,out=ib2);
        Nand(a=c[2],b=i2,out=ic2);
        Nand(a=d[2],b=i3,out=id2);
        Nand(a=ia2,b=ib2,out=ab2);
        Nand(a=ic2,b=id2,out=cd2);
        Nand(a=ab2,b=ab2,out=z02);
        Nand(a=cd2,b=cd2,out=z12);
        Nand(a=z02,b=z12,out=out[2]);

        Nand(a=a[3],b=i0,out=ia3);
        Nand(a=b[3],b=i1,out=ib3);
        Nand(a=c[3],b=i2,out=ic3);
        Nand(a=d[3],b=i3,out=id3);
        Nand(a=ia3,b=ib3,out=ab3);
        Nand(a=ic3,b=id3,out=cd3);
        Nand(a=ab3,b=ab3,out=z03);
        Nand(a=cd3,b=cd3,out=z13);
        Nand(a=z03,b=z13,out=out[3]);

        Nand(a=a[4],b=i0,out=ia4);
        Nand(a=b[4],b=i1,out=ib4);
        Nand(a=c[4],b=i2,out=ic4);
        Nand(a=d[4],b=i3,out=id4);
        Nand(a=ia4,b=ib4,out=ab4);
        Nand(a=ic4,b=id4,out=cd4);
        Nand(a=ab4,b=ab4,out=z04);
        Nand(a=cd4,b=cd4,out=z14);
        Nand(a=z04,b=z14,out=out[4]);

        Nand(a=a[5],b=i0,out=ia5);
        Nand(a=b[5],b=i1,out=ib5);
        Nand(a=c[5],b=i2,out=ic5);
        Nand(a=d[5],b=i3,out=id5);
        Nand(a=ia5,b=ib5,out=ab5);
        Nand(a=ic5,b=id5,out=cd5);
        Nand(a=ab5,b=ab5,out=z05);
        Nand(a=cd5,b=cd5,out=z15);
        Nand(a=z05,b=z15,out=out[5]);

        Nand(a=a[6],b=i0,out=ia6);
        Nand(a=b[6],b=i1,out=ib6);
        Nand(a=c[6],b=i2,out=ic6);
        Nand(a=d[6],b=i3,out=id6);
        Nand(a=ia6,b=ib6,out=ab6);
        Nand(a=ic6,b=id6,out=cd6);
        Nand(a=ab6,b=ab6,out=z06);
        Nand(a=cd6,b=cd6,out=z16);
        Nand(a=z06,b=z16,out=out[6]);

        Nand(a=a[7],b=i0,out=ia7);
        Nand(a=b[7],b=i1,out=ib7);
        Nand(a=c[7],b=i2,out=ic7);
        Nand(a=d[7],b=i3,out=id7);
        Nand(a=ia7,b=ib7,out=ab7);
        Nand(a=ic7,b=id7,out=cd7);
        Nand(a=ab7,b=ab7,out=z07);
        Nand(a=cd7,b=cd7,out=z17);
        Nand(a=z07,b=z17,out=out[7]);

        Nand(a=a[8],b=i0,out=ia8);
        Nand(a=b[8],b=i1,out=ib8);
        Nand(a=c[8],b=i2,out=ic8);
        Nand(a=d[8],b=i3,out=id8);
        Nand(a=ia8,b=ib8,out=ab8);
        Nand(a=ic8,b=id8,out=cd8);
        Nand(a=ab8,b=ab8,out=z08);
        Nand(a=cd8,b=cd8,out=z18);
        Nand(a=z08,b=z18,out=out[8]);

        Nand(a=a[9],b=i0,out=ia9);
        Nand(a=b[9],b=i1,out=ib9);
        Nand(a=c[9],b=i2,out=ic9);
        Nand(a=d[9],b=i3,out=id9);
        Nand(a=ia9,b=ib9,out=ab9);
        Nand(a=ic9,b=id9,out=cd9);
        Nand(a=ab9,b=ab9,out=z09);
        Nand(a=cd9,b=cd9,out=z19);
        Nand(a=z09,b=z19,out=out[9]);

        Nand(a=a[10],b=i0,out=ia10);
        Nand(a=b[10],b=i1,out=ib10);
        Nand(a=c[10],b=i2,out=ic10);
        Nand(a=d[10],b=i3,out=id10);
        Nand(a=ia10,b=ib10,out=ab10);
        Nand(a=ic10,b=id10,out=cd10);
        Nand(a=ab10,b=ab10,out=z010);
        Nand(a=cd10,b=cd10,out=z110);
        Nand(a=z010,b=z110,out=out[10]);

        Nand(a=a[11],b=i0,out=ia11);
        Nand(a=b[11],b=i1,out=ib11);
        Nand(a=c[11],b=i2,out=ic11);
        Nand(a=d[11],b=i3,out=id11);
        Nand(a=ia11,b=ib11,out=ab11);
        Nand(a=ic11,b=id11,out=cd11);
        Nand(a=ab11,b=ab11,out=z011);
        Nand(a=cd11,b=cd11,out=z111);
        Nand(a=z011,b=z111,out=out[11]);

        Nand(a=a[12],b=i0,out=ia12);
        Nand(a=b[12],b=i1,out=ib12);
        Nand(a=c[12],b=i2,out=ic12);
        Nand(a=d[12],b=i3,out=id12);
        Nand(a=ia12,b=ib12,out=ab12);
        Nand(a=ic12,b=id12,out=cd12);
        Nand(a=ab12,b=ab12,out=z012);
        Nand(a=cd12,b=cd12,out=z112);
        Nand(a=z012,b=z112,out=out[12]);

        Nand(a=a[13],b=i0,out=ia13);
        Nand(a=b[13],b=i1,out=ib13);
        Nand(a=c[13],b=i2,out=ic13);
        Nand(a=d[13],b=i3,out=id13);
        Nand(a=ia13,b=ib13,out=ab13);
        Nand(a=ic13,b=id13,out=cd13);
        Nand(a=ab13,b=ab13,out=z013);
        Nand(a=cd13,b=cd13,out=z113);
        Nand(a=z013,b=z113,out=out[13]);

        Nand(a=a[14],b=i0,out=ia14);
        Nand(a=b[14],b=i1,out=ib14);
        Nand(a=c[14],b=i2,out=ic14);
        Nand(a=d[14],b=i3,out=id14);
        Nand(a=ia14,b=ib14,out=ab14);
        Nand(a=ic14,b=id14,out=cd14);
        Nand(a=ab14,b=ab14,out=z014);
        Nand(a=cd14,b=cd14,out=z114);
        Nand(a=z014,b=z114,out=out[14]);

        Nand(a=a[15],b=i0,out=ia15);
        Nand(a=b[15],b=i1,out=ib15);
        Nand(a=c[15],b=i2,out=ic15);
        Nand(a=d[15],b=i3,out=id15);
        Nand(a=ia15,b=ib15,out=ab15);
        Nand(a=ic15,b=id15,out=cd15);
        Nand(a=ab15,b=ab15,out=z015);
        Nand(a=cd15,b=cd15,out=z115);
        Nand(a=z015,b=z115,out=out[15]);
}